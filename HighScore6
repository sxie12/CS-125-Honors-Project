
public class HighScoreList {
	private static String[] names = {"None", "None", "None", "None", "None"};
	private static String[] scores = {"0","0","0","0","0"};
	
	public static void highscoreList() {
		while(Zen.isRunning()) {
			
			Zen.setColor(200, 100, 50);
			Zen.fillRect(0, 0, Zen.getZenWidth(), Zen.getZenHeight());
			
			PixelatedText.drawPixelatedText("Highscore List",300,20,6);
			
			// Names here
			PixelatedText.drawPixelatedText("1. " + names[0],104,100,4);
			PixelatedText.drawPixelatedText("2. " + names[1],100,130,4);
			PixelatedText.drawPixelatedText("3. " + names[2],100,160,4);
			PixelatedText.drawPixelatedText("4. " + names[3],100,190,4);
			PixelatedText.drawPixelatedText("5. " + names[4],100,220,4);
			
			// Scores here
			PixelatedText.drawPixelatedText(scores[0],500,100,4);
			PixelatedText.drawPixelatedText(scores[1],500,130,4);
			PixelatedText.drawPixelatedText(scores[2],500,160,4);
			PixelatedText.drawPixelatedText(scores[3],500,190,4);
			PixelatedText.drawPixelatedText(scores[4],500,220,4);
			
			Zen.setColor(0, 200, 200);
			// Back button design
			Zen.fillRect(700, 270, 200, 60);
			
			PixelatedText.drawPixelatedText("Back", 762, 290, 4);
			
			if(Zen.getMouseClickX() >= 700 && Zen.getMouseClickX() <= 900 && Zen.getMouseClickY() >= 270 && Zen.getMouseClickY() <= 330) {
				// Goto the interface menu
				Interface.start();
			}
			
			Zen.sleep(45);
			Zen.flipBuffer();
		}
	}
	
	// public method to check if this score is a high score
	// use this inside the main runner class
	public static boolean isHighScore(int score) {
		return Integer.parseInt(scores[4]) < score;
	}
	
	// private method to find index of this score
	private static int getHighScoreIndex(int score) {
		for (int i = 0; i < 5; i++) {
			if (score > Integer.parseInt(scores[i]))
				return i;
		}
		return 6;
	}
	
	// use this inside the main runner class
	public static void setHighScore(String name, String score) {
		int s = Integer.parseInt(score);
		if (isHighScore(s)) {
			String[] tempScore = new String[5];
			String[] tempName = new String[5];
			int index = getHighScoreIndex(s);
			for (int i = 0; i < 5; i++) {
				if (i < index) {
					tempScore[i] = scores[i];
					tempName[i] = names[i];
				} else if (i > index) {
					tempScore[i] = scores[i - 1];
					tempName[i] = names[i - 1];
				} else {
					tempScore[i] = score;
					tempName[i] = name;
				}
			}
			scores = tempScore;
			names = tempName;
		}
	}
	
	public static void clearHighScores() {
		for(int i = 0; i < 5; i++) {
			scores[i] = "0";
			names[i] = "None";
		}
	}
	/**
	 * this was just to test the file by itself
	public static void main(String[] args) {
		HighScoreList.highscoreList();
	}
	*/
}
